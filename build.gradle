plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
}
// 스프링 부트의 읜존성들을 관리해 주는 플러그인. 꼭 추가해야한다.
apply plugin: 'io.spring.dependency-management'

//group 'org.example'
//version '1.0-SNAPSHOT'
group 'com.websocket'
version '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    // 컴파일 시점에만 사용하고 런타임에는 필요 없는 라이브러리를 정의한다.
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
/*
STOMP는 Simple Text Oriented Messaging Protocol의 약어입니다. 데이터 교환의 형식과 규칙을 정의하는 메시징 프로토콜입니다.
STOM를 사용하는 이유?  WebSocket은 통신 프로토콜 일뿐입니다. 특정 주제를 구독한 사용자에게만 메시지를 보내는 방법 또는 특정 사용자에게 메시지를 보내는 방법과 같은 내용은 정의하지 않습니다. 이러한 기능을 위해서는 STOMP가 필요합니다.

채팅방을 생성한다 – pub/sub 구현을 위한 Topic이 하나 생성된다.
채팅방에 입장한다 – Topic을 구독한다.
채팅방에서 메시지를 보내고 받는다 – 해당 Topic으로 메시지를 발송하거나(pub) 메시지를 받는다(sub)
*/
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.webjars.bower:bootstrap:4.3.1'
    implementation 'org.webjars.bower:vue:2.5.16'
    implementation 'org.webjars.bower:axios:0.17.1'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.3-1'
    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //embedded-redis
    compile group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'

    // Java 라이브러리로 반복되는 getter, setter, toString 등의 메서드 작성 코드를 줄여주는 코드 다이어트 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
